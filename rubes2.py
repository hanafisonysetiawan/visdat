# -*- coding: utf-8 -*-
"""rubes2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ioQXYrgI8t7RbTgGYFFXt4DJSFEDzylF
"""

# import modules
import numpy as np
import pandas as pd
from bokeh.io import output_file, save, curdoc
from bokeh.plotting import figure, show
from bokeh.layouts import column, row
from bokeh.models.widgets import Tabs, Panel
from bokeh.models import CDSView, ColumnDataSource, GroupFilter, Div, HoverTool

sampel = pd.read_csv("owid-covid-data.csv" )
sampel.head()

# read data
Location_list = ['Afghanistan','Brazil','Brunei', 'Indonesia', 'India']

df = pd.read_csv("owid-covid-data.csv", parse_dates=['date'])
data = df[df.location.isin(Location_list)] 
data.head()

# output to file
output_file('covid19.html',
             title = 'Visualisasi Data Interaktif Statistik COVID-19')

# Create and configure the figure
con_fig = figure(x_axis_type='datetime',
                  plot_height=400, plot_width=1000,
                  title='Click Legend to HIDE Data',
                  x_axis_label='Date', y_axis_label='new_cases')

dea_fig = figure(x_axis_type='datetime',
                  plot_height=400, plot_width=1000,
                  title='Click Legend to HIDE Data',
                  x_axis_label='Date', y_axis_label='hospital_beds_per_thousand')

rec_fig = figure(x_axis_type='datetime',
                  plot_height=400, plot_width=1000,
                  title='Click Legend to HIDE Data',
                  x_axis_label='Date', y_axis_label='total_cases')

# create a ColumnDataSource
covid_cds = ColumnDataSource(data)

# create views for 5 location 
Afghanistan_view = CDSView(source=covid_cds,
                  filters=[GroupFilter(column_name='location', group='Afghanistan')])

Brazil_view = CDSView(source=covid_cds,
                  filters=[GroupFilter(column_name='location', group='Brazil')])

Brunei_view = CDSView(source=covid_cds,
                  filters=[GroupFilter(column_name='location', group='Brunei')])

Indonesia_view = CDSView(source=covid_cds,
                  filters=[GroupFilter(column_name='location', group='Indonesia')])

India_view = CDSView(source=covid_cds,
                  filters=[GroupFilter(column_name='location', group='India')])

# format the tooltip
con_tooltips = [
            ('location', '@location'),
            ('new_cases', '@new_cases')
            ]

dea_tooltips = [
            ('location', '@location'),
            ('hospital_beds_per_thousand', '@hospital_beds_per_thousand')
            ]

rec_tooltips = [
            ('location', '@location'),
            ('total_cases', '@total_cases')
            ]

# format hover glyph
con_hover_glyph = con_fig.circle(x='Date', y='new_cases', source=covid_cds,
                                 size=7, alpha=0,
                                 hover_fill_color='white', hover_alpha=0.5)

dea_hover_glyph = dea_fig.circle(x='Date', y='hospital_beds_per_thousand', source=covid_cds,
                                 size=7, alpha=0,
                                 hover_fill_color='white', hover_alpha=0.5)

rec_hover_glyph = rec_fig.circle(x='Date', y='total_cases', source=covid_cds,
                                 size=7, alpha=0,
                                 hover_fill_color='white', hover_alpha=0.5)

# add the HoverTool to the figure
con_fig.add_tools(HoverTool(tooltips=con_tooltips, renderers=[con_hover_glyph]))
dea_fig.add_tools(HoverTool(tooltips=dea_tooltips, renderers=[dea_hover_glyph]))
rec_fig.add_tools(HoverTool(tooltips=rec_tooltips, renderers=[rec_hover_glyph]))

# consolidate the common keyword arguments in dicts
common_circle = {
    'source': covid_cds,
    'size': 5,
    'alpha': 1,
    'muted_alpha': 0
}
common_Afghanistan = {
    'view': Afghanistan_view,
    'color': '#FC6E51',
    'legend_label': 'Afghanistan'
}
common_Brunei = {
    'view': Brunei_view,
    'color': '#370665',
    'legend_label': 'Brunei'
}
common_Indonesia = {
    'view': Indonesia_view,
    'color': '#35589A',
    'legend_label': 'Indonesia'
}
common_India = {
    'view': India_view,
    'color': '#F14A16',
    'legend_label': 'India'
}
common_Brazil = {
    'view': Brazil_view,
    'color': '#FC9918',
    'legend_label': 'Brazil'
}

# create the figures and draw the data
con_fig.circle(x='Date', y='new_cases', **common_circle, **common_Indonesia)
con_fig.circle(x='Date', y='new_cases', **common_circle, **common_Brazil)
con_fig.circle(x='Date', y='new_cases', **common_circle, **common_Afghanistan)
con_fig.circle(x='Date', y='new_cases', **common_circle, **common_India)
con_fig.circle(x='Date', y='new_cases', **common_circle, **common_Brunei)

dea_fig.circle(x='Date', y='hospital_beds_per_thousand', **common_circle, **common_Indonesia)
dea_fig.circle(x='Date', y='hospital_beds_per_thousand', **common_circle, **common_Brazil)
dea_fig.circle(x='Date', y='hospital_beds_per_thousand', **common_circle, **common_Afghanistan)
dea_fig.circle(x='Date', y='hospital_beds_per_thousand', **common_circle, **common_India)
dea_fig.circle(x='Date', y='hospital_beds_per_thousand', **common_circle, **common_Brunei)

rec_fig.circle(x='Date', y='total_cases', **common_circle, **common_Indonesia)
rec_fig.circle(x='Date', y='total_cases', **common_circle, **common_Brazil)
rec_fig.circle(x='Date', y='total_cases', **common_circle, **common_Afghanistan)
rec_fig.circle(x='Date', y='total_cases', **common_circle, **common_India)
rec_fig.circle(x='Date', y='total_cases', **common_circle, **common_Brunei)

# add interactivity to the legend
con_fig.legend.click_policy = 'mute'
dea_fig.legend.click_policy = 'mute'
rec_fig.legend.click_policy = 'mute'

# add a tittle for the entire visualization using Div
html = """<h3>Visualisasi Data Interaktif Statistik COVID-19</h3>
Kelompok: nomer kelompok <br>
Kelas: IF-42-xx <br>"""
sup_title = Div(text=html)

# Create three panels
con_panel = Panel(child=con_fig, title='new_cases')
dea_panel = Panel(child=dea_fig, title='hospital_beds_per_thousand')
rec_panel = Panel(child=rec_fig, title='total_cases')

# Assign the panels to Tabs
tabs = Tabs(tabs=[con_panel, dea_panel, rec_panel])

# Visualize
layout = row(column(sup_title, tabs))
curdoc().add_root(layout)

# save to file
save(layout)